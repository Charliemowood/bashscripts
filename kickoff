#!/bin/bash


#------------------------------------------
# CREATE FOLDER AND INITIAL FILES

# create project folder and jump into it
mkdir $1
cd $1

# fill the folder with all necessary start files
touch server.js
touch webpack.config.js
touch package.json
mkdir client

mkdir client/build
touch client/build/index.html

mkdir client/src
mkdir client/src/models
mkdir client/src/models/specs
mkdir client/src/views
touch client/src/app.js




#------------------------------------------
# CREATE BOILERPLATE CODE

# fill server.js
cat << EOF > server.js
var express = require('express');
var app = express();

app.use(express.static('client/build'));

app.get('/', function (req, res) {
  res.sendFile(__dirname + '/client/build/index.html');
});

var server = app.listen(3000, function () {
  console.log('Server running on port: ' + server.address().port);
});
EOF

# fill webpack.config.js
cat << EOF > webpack.config.js
var config = {
  entry: __dirname + "/client/src/app.js",
  output: {
    path: __dirname + "/client/build",
    filename: "bundle.js"
  },
  devtool: 'source-map'
}

module.exports = config;
EOF

# fill index.html
cat << EOF > client/build/index.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
</head>
<body>
	
</body>
</html>
EOF

# fill app.js
cat << EOF > client/src/app.js
var app = function(){
  
}

window.addEventListener('load', app);
EOF

# fill package.json
cat << EOF > package.json
{
  "name": "project",
  "version": "1.0.0",
  "description": "",
  "main": "server.js",
  "scripts": {
    "start": "nodemon server.js",
    "build": "webpack -w",
    "test": "mocha client/src/models/specs"
  },
  "author": "",
  "license": "ISC",
  "dependencies": {
    "express": "^4.15.3"
  },
  "devDependencies": {
    "mocha": "^3.4.2",
    "webpack": "^3.0.0"
  }
}
EOF




#------------------------------------------
# INSTALL DEPENDENCIES

npm i
















